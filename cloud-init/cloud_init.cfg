#cloud-config
final_message: "Rise and shine!"
preserve_hostname: false
hostname: ${hostname}
manage_etc_hosts: true
growpart:
  mode: auto
  devices: ['/']
users:
- name: cloud
  lock_passwd: true
  sudo: ALL=(ALL) NOPASSWD:ALL
  ssh_authorized_keys:
  - ${ssh_public_key}
package_upgrade: true
write_files:
- path: /root/.vimrc
  permissions: 0644
  content: |
    set tabstop=2
    set expandtab
    set shiftwidth=2
- path: /etc/sysctl.d/kubernetes.conf
  permissions: 0644
  content: |
    net.bridge.bridge-nf-call-ip6tables = 1
    net.bridge.bridge-nf-call-iptables = 1
    net.ipv4.ip_forward = 1
- path: /root/setup.sh
  permissions: 0755
  content: |
    #!/bin/bash

    export NEEDRESTART_MODE=a
    export NODE_TYPE=${node_type}

    sysctl -p /etc/sysctl.d/kubernetes.conf
    swapoff -a
    modprobe br_netfilter
    modprobe overlay
    sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://dl.k8s.io/apt/doc/apt-key.gpg
    sudo curl -fsSLo /tmp/docker-apt-key.gpg https://download.docker.com/linux/ubuntu/gpg
    sudo gpg --dearmor -o /usr/share/keyrings/docker-ce-archive-keyring.gpg /tmp/docker-apt-key.gpg
    echo "deb [signed-by=/usr/share/keyrings/docker-ce-archive-keyring.gpg arch=$(dpkg --print-architecture)] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker-ce.list > /dev/null
    echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
    sudo apt update
    sudo apt install -y containerd.io 
    sudo apt install -y apt-transport-https ca-certificates jq
    containerd config default | sed 's/SystemdCgroup = false/SystemdCgroup = true/' | sudo tee /etc/containerd/config.toml
    systemctl restart containerd
    sudo apt install -y kubeadm=${kubernetes_version}-00 kubelet=${kubernetes_version}-00 kubectl=${kubernetes_version}-00
    crictl config --set runtime-endpoint=unix:///run/containerd/containerd.sock --set image-endpoint=unix:///run/containerd/containerd.sock
    hostnamectl set-hostname ${hostname}

    echo $NODE_TYPE > ~/k8s_node_type
    echo "export KUBECONFIG=/etc/kubernetes/admin.conf" >> ~/.bashrc
    echo "alias k=kubectl" >> ~/.bashrc

runcmd:
  - bash /root/setup.sh